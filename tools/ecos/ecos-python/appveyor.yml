# Attempts to build ECOS in Python 2.7 and Python 3.3 on both 64- and
# 32-bit Windows using Python wheels.
# The script is mostly taken from https://github.com/ogrisel/python-appveyor-demo
environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"

  matrix:
    - PYTHON: "C:\\Python27_32"
      PYTHON_VERSION: "2.7.8"
      PYTHON_ARCH: "32"
      CONDA_PY: "27"
      CONDA_NPY: "19"

    - PYTHON: "C:\\Python27_64"
      PYTHON_VERSION: "2.7.8"
      PYTHON_ARCH: "64"
      CONDA_PY: "27"
      CONDA_NPY: "19"

    - PYTHON: "C:\\Python33_32"
      PYTHON_VERSION: "3.3.5"
      PYTHON_ARCH: "32"
      CONDA_PY: "33"
      CONDA_NPY: "19"

    - PYTHON: "C:\\Python33_64"
      PYTHON_VERSION: "3.3.5"
      PYTHON_ARCH: "64"
      CONDA_PY: "33"
      CONDA_NPY: "19"

    - PYTHON: "C:\\Python34_64"
      PYTHON_VERSION: "3.4.1"
      PYTHON_ARCH: "32"
      CONDA_PY: "34"
      CONDA_NPY: "19"

    - PYTHON: "C:\\Python34_64"
      PYTHON_VERSION: "3.4.1"
      PYTHON_ARCH: "64"
      CONDA_PY: "34"
      CONDA_NPY: "19"

install:
  # initialize the submodule
  - git submodule update --init --recursive

  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""

  - ECHO "Installed SDKs:"
  - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""

  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  - "powershell ./appveyor/install.ps1"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

build: false  # Not a C# project, build stuff at the test step instead.

test_script:
  # Build the compiled extension and run the project tests
  - "%CMD_IN_ENV% conda build .\\appveyor\\conda-recipe --quiet"
  - python appveyor\move-wheel.py

artifacts:
  # Archive the generated wheel package in the ci.appveyor.com build report.
  - path: '*.whl'

#on_success:
#  - TODO: upload the content of dist/*.whl to a public wheelhouse
#
